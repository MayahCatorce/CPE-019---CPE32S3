{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "Technological Institute of the Philippines | Quezon City - Computer Engineering\n",
        "--- | ---\n",
        "Course Code: | CPE 019\n",
        "Code Title: | Emerging Technologies in CpE 2\n",
        "2nd Semester | AY 2023-2024\n",
        "<hr> | <hr>\n",
        "<u>**Assignment 10.2 - ARIMA Model**\n",
        "**Name** | Catorce, Mayah Mae A.\n",
        "**Section** | CPE32S3\n",
        "**Date Performed**: |April 29, 2024\n",
        "**Date Submitted**: |May 4, 2024\n",
        "**Instructor**: | Engr. Roman Richard\n",
        "\n",
        "<hr>"
      ],
      "metadata": {
        "id": "-e0XymCvrE7u"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1oJWa7xrq-Nr",
        "outputId": "0c03e2a5-f236-43c7-85f2-b47527923659"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Explore the dataset"
      ],
      "metadata": {
        "id": "OZNEQGSVvssN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "df = pd.read_csv('/content/drive/MyDrive/EMTECH2/ARIMA/data.csv')\n",
        "df.info()\n",
        "\n",
        "df.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 604
        },
        "id": "eEeoj_x9zlTd",
        "outputId": "583d29b7-03cb-4dcd-930b-9580a5c93266"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 192 entries, 0 to 191\n",
            "Data columns (total 2 columns):\n",
            " #   Column     Non-Null Count  Dtype  \n",
            "---  ------     --------------  -----  \n",
            " 0   Month      192 non-null    object \n",
            " 1   CO2 (ppm)  192 non-null    float64\n",
            "dtypes: float64(1), object(1)\n",
            "memory usage: 3.1+ KB\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 3
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(50)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1617
        },
        "id": "GkrHrgz818WS",
        "outputId": "81999786-45e1-461c-e744-81dc0b15aefa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Month  CO2 (ppm)\n",
              "0   1965-01     319.32\n",
              "1   1965-02     320.36\n",
              "2   1965-03     320.82\n",
              "3   1965-04     322.06\n",
              "4   1965-05     322.17\n",
              "5   1965-06     321.95\n",
              "6   1965-07     321.20\n",
              "7   1965-08     318.81\n",
              "8   1965-09     317.82\n",
              "9   1965-10     317.37\n",
              "10  1965-11     318.93\n",
              "11  1965-12     319.09\n",
              "12  1966-01     319.94\n",
              "13  1966-02     320.98\n",
              "14  1966-03     321.81\n",
              "15  1966-04     323.03\n",
              "16  1966-05     323.36\n",
              "17  1966-06     323.11\n",
              "18  1966-07     321.65\n",
              "19  1966-08     319.64\n",
              "20  1966-09     317.86\n",
              "21  1966-10     317.25\n",
              "22  1966-11     319.06\n",
              "23  1966-12     320.26\n",
              "24  1967-01     321.65\n",
              "25  1967-02     321.81\n",
              "26  1967-03     322.36\n",
              "27  1967-04     323.67\n",
              "28  1967-05     324.17\n",
              "29  1967-06     323.39\n",
              "30  1967-07     321.93\n",
              "31  1967-08     320.29\n",
              "32  1967-09     318.58\n",
              "33  1967-10     318.60\n",
              "34  1967-11     319.98\n",
              "35  1967-12     321.25\n",
              "36  1968-01     321.88\n",
              "37  1968-02     322.47\n",
              "38  1968-03     323.17\n",
              "39  1968-04     324.23\n",
              "40  1968-05     324.88\n",
              "41  1968-06     324.75\n",
              "42  1968-07     323.47\n",
              "43  1968-08     321.34\n",
              "44  1968-09     319.56\n",
              "45  1968-10     319.45\n",
              "46  1968-11     320.45\n",
              "47  1968-12     321.92\n",
              "48  1969-01     323.40\n",
              "49  1969-02     324.21"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6fd49cde-82b8-4adb-803e-36f6515f0c6f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Month</th>\n",
              "      <th>CO2 (ppm)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1965-01</td>\n",
              "      <td>319.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1965-02</td>\n",
              "      <td>320.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1965-03</td>\n",
              "      <td>320.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1965-04</td>\n",
              "      <td>322.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1965-05</td>\n",
              "      <td>322.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1965-06</td>\n",
              "      <td>321.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1965-07</td>\n",
              "      <td>321.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>1965-08</td>\n",
              "      <td>318.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>1965-09</td>\n",
              "      <td>317.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>1965-10</td>\n",
              "      <td>317.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>1965-11</td>\n",
              "      <td>318.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1965-12</td>\n",
              "      <td>319.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>1966-01</td>\n",
              "      <td>319.94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>1966-02</td>\n",
              "      <td>320.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1966-03</td>\n",
              "      <td>321.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>1966-04</td>\n",
              "      <td>323.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>1966-05</td>\n",
              "      <td>323.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1966-06</td>\n",
              "      <td>323.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>1966-07</td>\n",
              "      <td>321.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>1966-08</td>\n",
              "      <td>319.64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>1966-09</td>\n",
              "      <td>317.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>1966-10</td>\n",
              "      <td>317.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>1966-11</td>\n",
              "      <td>319.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>1966-12</td>\n",
              "      <td>320.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>1967-01</td>\n",
              "      <td>321.65</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>1967-02</td>\n",
              "      <td>321.81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>1967-03</td>\n",
              "      <td>322.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>1967-04</td>\n",
              "      <td>323.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>1967-05</td>\n",
              "      <td>324.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>1967-06</td>\n",
              "      <td>323.39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>1967-07</td>\n",
              "      <td>321.93</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>1967-08</td>\n",
              "      <td>320.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>1967-09</td>\n",
              "      <td>318.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>1967-10</td>\n",
              "      <td>318.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>1967-11</td>\n",
              "      <td>319.98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>1967-12</td>\n",
              "      <td>321.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>1968-01</td>\n",
              "      <td>321.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>1968-02</td>\n",
              "      <td>322.47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1968-03</td>\n",
              "      <td>323.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>1968-04</td>\n",
              "      <td>324.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>1968-05</td>\n",
              "      <td>324.88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>1968-06</td>\n",
              "      <td>324.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>1968-07</td>\n",
              "      <td>323.47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>1968-08</td>\n",
              "      <td>321.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>1968-09</td>\n",
              "      <td>319.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>1968-10</td>\n",
              "      <td>319.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>1968-11</td>\n",
              "      <td>320.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>1968-12</td>\n",
              "      <td>321.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>1969-01</td>\n",
              "      <td>323.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>1969-02</td>\n",
              "      <td>324.21</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6fd49cde-82b8-4adb-803e-36f6515f0c6f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6fd49cde-82b8-4adb-803e-36f6515f0c6f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6fd49cde-82b8-4adb-803e-36f6515f0c6f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-735eab57-51be-47d4-a535-ae3c41352db6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-735eab57-51be-47d4-a535-ae3c41352db6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-735eab57-51be-47d4-a535-ae3c41352db6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 192,\n  \"fields\": [\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 192,\n        \"samples\": [\n          \"1968-10\",\n          \"1976-05\",\n          \"1971-05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO2 (ppm)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.962682375257165,\n        \"min\": 317.25,\n        \"max\": 341.19,\n        \"num_unique_values\": 183,\n        \"samples\": [\n          319.64,\n          319.56,\n          334.39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DBTOh9B91_h3",
        "outputId": "b1f09925-20b3-409f-eeb3-b4504df4be38"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(192, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Load time series data: data.csv"
      ],
      "metadata": {
        "id": "dUJeDwsgjwJp"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "76REM1tLgoAY",
        "outputId": "5768294a-7ea3-4d4d-c9ea-10d1708349f4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            CO2 (ppm)\n",
              "Month                \n",
              "1965-01-01     319.32\n",
              "1965-02-01     320.36\n",
              "1965-03-01     320.82\n",
              "1965-04-01     322.06\n",
              "1965-05-01     322.17"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b817d24b-efb5-43ec-97fe-622606870b21\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CO2 (ppm)</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Month</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1965-01-01</th>\n",
              "      <td>319.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1965-02-01</th>\n",
              "      <td>320.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1965-03-01</th>\n",
              "      <td>320.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1965-04-01</th>\n",
              "      <td>322.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1965-05-01</th>\n",
              "      <td>322.17</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b817d24b-efb5-43ec-97fe-622606870b21')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b817d24b-efb5-43ec-97fe-622606870b21 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b817d24b-efb5-43ec-97fe-622606870b21');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0979fbf5-a817-4d58-af1d-e36602f15c9e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0979fbf5-a817-4d58-af1d-e36602f15c9e')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0979fbf5-a817-4d58-af1d-e36602f15c9e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "series",
              "summary": "{\n  \"name\": \"series\",\n  \"rows\": 192,\n  \"fields\": [\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1965-01-01 00:00:00\",\n        \"max\": \"1980-12-01 00:00:00\",\n        \"num_unique_values\": 192,\n        \"samples\": [\n          \"1968-10-01 00:00:00\",\n          \"1976-05-01 00:00:00\",\n          \"1971-05-01 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO2 (ppm)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.962682375257165,\n        \"min\": 317.25,\n        \"max\": 341.19,\n        \"num_unique_values\": 183,\n        \"samples\": [\n          319.64,\n          319.56,\n          334.39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "%matplotlib inline\n",
        "\n",
        "import sys\n",
        "import statsmodels as s\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "series = pd.read_csv('/content/drive/MyDrive/EMTECH2/ARIMA/data.csv', index_col = 'Month', parse_dates = True)\n",
        "series.head(5)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Visualize the time series"
      ],
      "metadata": {
        "id": "gpK63-K7j29d"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualize the time series\n",
        "series.plot()\n",
        "plt.title('Time Series')\n",
        "plt.xlabel('Month')\n",
        "plt.ylabel('Value')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "4bJUvfVoj4dh",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "outputId": "d5cd1cf4-089c-4efd-fb2a-53b05fe91654"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "Based on the trend, it is observable that the CO2 ppm have gradually increased in a high and low fluctuations throughout the years. It indicates a long-term trend of rising atmospheric CO2 concentrations due to human activities such as fossil fuel combustion, deforestation, and industrial processes."
      ],
      "metadata": {
        "id": "mNU9DuH_KmnW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Fit an ARIMA Model (baseline model order = (1,1,1))\n"
      ],
      "metadata": {
        "id": "JO_C9vhVj5Gk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Fit a baseline ARIMA model with order (1,1,1)\n",
        "from statsmodels.tsa.arima.model import ARIMA\n",
        "\n",
        "\n",
        "model = ARIMA(series, order=(1,1,1))\n",
        "model_fit = model.fit()\n"
      ],
      "metadata": {
        "id": "Rz9dO9c4j9bo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fcf916b2-c29c-411b-b1b3-b5e40b599496"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency MS will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency MS will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency MS will be used.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "This code fits a baseline ARIMA model to a time series dataset with ARIMA order (1,1,1), capturing linear dependencies, differencing, and moving average components. The warning messages indicate that the frequency of the time series data was inferred as monthly (MS)."
      ],
      "metadata": {
        "id": "0l75gfHxMFHF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Improve the ARIMA Model\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "lLmtAfyYj92u"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.tsa.arima.model import ARIMA\n",
        "\n",
        "model = ARIMA(series, order=(1,2,3))\n",
        "model_fit = model.fit()"
      ],
      "metadata": {
        "id": "EGtm3z872v4p",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bc30b70c-3650-4161-8e8f-29e5c536eeac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency MS will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency MS will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency MS will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/statespace/sarimax.py:978: UserWarning: Non-invertible starting MA parameters found. Using zeros as starting parameters.\n",
            "  warn('Non-invertible starting MA parameters found.'\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "This code fits an ARIMA (AutoRegressive Integrated Moving Average) model to a time series dataset with ARIMA order (1,2,3), capturing the linear dependencies, differencing, and moving average components. The warning messages indicate that the frequency of the time series data was inferred as monthly (MS), and there were non-invertible starting parameters found in the moving average component, prompting the use of zeros as starting parameters."
      ],
      "metadata": {
        "id": "mROR1aroMRq0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Print the model summary\n"
      ],
      "metadata": {
        "id": "pjgxzVGFj__k"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Print model summary\n",
        "print(model_fit.summary())\n"
      ],
      "metadata": {
        "id": "xnZMKtGrkBWo",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b071ede4-f7cd-4ee4-de3a-eff3f7b8a69f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                               SARIMAX Results                                \n",
            "==============================================================================\n",
            "Dep. Variable:              CO2 (ppm)   No. Observations:                  192\n",
            "Model:                 ARIMA(1, 2, 3)   Log Likelihood                -215.841\n",
            "Date:                Sat, 04 May 2024   AIC                            441.682\n",
            "Time:                        10:25:12   BIC                            457.917\n",
            "Sample:                    01-01-1965   HQIC                           448.259\n",
            "                         - 12-01-1980                                         \n",
            "Covariance Type:                  opg                                         \n",
            "==============================================================================\n",
            "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------\n",
            "ar.L1          0.3825      0.140      2.724      0.006       0.107       0.658\n",
            "ma.L1         -0.4704     22.759     -0.021      0.984     -45.077      44.136\n",
            "ma.L2         -0.1176     11.997     -0.010      0.992     -23.632      23.396\n",
            "ma.L3         -0.4119      9.344     -0.044      0.965     -18.725      17.901\n",
            "sigma2         0.5557     12.617      0.044      0.965     -24.172      25.284\n",
            "===================================================================================\n",
            "Ljung-Box (L1) (Q):                   0.37   Jarque-Bera (JB):                 2.16\n",
            "Prob(Q):                              0.54   Prob(JB):                         0.34\n",
            "Heteroskedasticity (H):               0.95   Skew:                             0.21\n",
            "Prob(H) (two-sided):                  0.83   Kurtosis:                         2.68\n",
            "===================================================================================\n",
            "\n",
            "Warnings:\n",
            "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "This code shows a summary of the model we made to understand how CO2 levels change over time. It tells us about the numbers the model used to make predictions, like how much CO2 levels change in response to past values (ar.L1), and how it corrects mistakes in its predictions (ma.L1, ma.L2, ma.L3). The \"Warnings\" section tells us about any issues the model had while figuring out these numbers."
      ],
      "metadata": {
        "id": "ITrQHXQZMalS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Make a forecast (steps=10)\n"
      ],
      "metadata": {
        "id": "0xJYj16DkB3N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.tsa.arima.model import ARIMA\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from math import sqrt\n",
        "\n",
        "# Splitting into train and test sets\n",
        "train_size = int(len(series) * 0.75)\n",
        "train_data, test_data = series[0:train_size], series[train_size:]\n",
        "\n",
        "start = len(train_data)\n",
        "end=len(train_data)+len(test_data)-1\n",
        "model = ARIMA(train_data, order = (9,2,0))\n",
        "results = model.fit()\n",
        "predictions = results.predict(start=start, end=end, dynamic=False, type='levels')\n",
        "forecast = results.predict(len(series), len(series)+10, typ = 'levels')"
      ],
      "metadata": {
        "id": "ZbowTOgDkDhh",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9d9c2b6b-de8e-46fb-8836-ec6d7c4b8430"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency MS will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency MS will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency MS will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/statespace/representation.py:374: FutureWarning: Unknown keyword arguments: dict_keys(['type']).Passing unknown keyword arguments will raise a TypeError beginning in version 0.15.\n",
            "  warnings.warn(msg, FutureWarning)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/tsa/statespace/representation.py:374: FutureWarning: Unknown keyword arguments: dict_keys(['typ']).Passing unknown keyword arguments will raise a TypeError beginning in version 0.15.\n",
            "  warnings.warn(msg, FutureWarning)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "This code splits the time series data into training and test sets, with 75% of the data used for training and the rest for testing. Then, it fits an ARIMA model to the training data with order (9,2,0), makes predictions for the test set, and generates forecasts for the next 10 time steps. However, it generates some warnings related to the frequency of the time series data and unknown keyword arguments passed to the function, which might need further investigation."
      ],
      "metadata": {
        "id": "7BfDTA0cM_e6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Forecast (steps = 10)\")\n",
        "print(forecast)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x60SX-rl4SGr",
        "outputId": "121dab06-945c-43d9-fa78-a5c9e6ce14b0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Forecast (steps = 10)\n",
            "1981-01-01    338.829450\n",
            "1981-02-01    339.410077\n",
            "1981-03-01    339.846441\n",
            "1981-04-01    339.951027\n",
            "1981-05-01    339.624439\n",
            "1981-06-01    338.996781\n",
            "1981-07-01    338.387871\n",
            "1981-08-01    338.097810\n",
            "1981-09-01    338.219246\n",
            "1981-10-01    338.635268\n",
            "1981-11-01    339.168786\n",
            "Freq: MS, Name: predicted_mean, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"MSE: \", mean_squared_error(test_data, predictions))\n",
        "print(\"RMSE: \", sqrt(mean_squared_error(test_data, predictions)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U1FPvON14Sok",
        "outputId": "622986c2-6d39-4efc-a137-75e8e996273a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MSE:  1.1498843083979555\n",
            "RMSE:  1.0723265866320557\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "Both MSE and RMSE provide quantitative measures of the model's prediction accuracy, with lower values indicating better performance."
      ],
      "metadata": {
        "id": "Yx16R00pNFg1"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Plot the forecast\n"
      ],
      "metadata": {
        "id": "t69ZZPYakEga"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.ticker as ticker\n",
        "formatter = ticker.StrMethodFormatter('{x:,.0f}')"
      ],
      "metadata": {
        "id": "5PMWnS1p4fIi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ylabel='CO2 (ppm)'\n",
        "xlabel='Year'\n",
        "\n",
        "ax = series.plot(legend=True,figsize=(12,6))\n",
        "forecast.plot(legend=True)\n",
        "ax.autoscale(axis='x',tight=True)\n",
        "ax.set(xlabel=xlabel, ylabel=ylabel)\n",
        "ax.yaxis.set_major_formatter(formatter);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "PPCEYfT54gxP",
        "outputId": "e224a796-61f0-4338-e40a-66c352513575"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "The plot shows CO2 levels going up and down over time, suggesting some fluctuations. The forecast predicts that CO2 levels will peak lower in the future compared to before, but they're still expected to keep rising overall."
      ],
      "metadata": {
        "id": "fT1mADy3OFsL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Perform a grid search\n"
      ],
      "metadata": {
        "id": "eoE9wG4hkGzx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def evaluate_arima_model(dataset, arima_order):\n",
        "  train_size = int(len(dataset) * 0.75)\n",
        "  train_data, test_data = dataset[0:train_size], dataset[train_size:]\n",
        "\n",
        "  start = len(train_data)\n",
        "  end=len(train_data)+len(test_data)-1\n",
        "\n",
        "  model = ARIMA(train_data, order = arima_order)\n",
        "  results = model.fit()\n",
        "  forecast = results.predict(len(dataset), len(dataset)+10, typ = 'levels')\n",
        "  predictions = results.predict(start=start, end=end, dynamic=False, type='levels')\n",
        "  mse = mean_squared_error(test_data, predictions)\n",
        "  return mse"
      ],
      "metadata": {
        "id": "Ikn7F2pB5C6Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def evaluate_models(dataset, p_values, d_values, q_values):\n",
        "    best_score, best_cfg = float(\"inf\"), None\n",
        "    for p in p_values:\n",
        "        for d in d_values:\n",
        "            for q in q_values:\n",
        "                order = (p,d,q)\n",
        "                try:\n",
        "                    mse = evaluate_arima_model(dataset, order)  # Fixed typo here\n",
        "                    if mse < best_score:\n",
        "                        best_score, best_cfg = mse, order\n",
        "                    print('ARIMA%s MSE=%.3f' % (order,mse))\n",
        "                except:\n",
        "                    continue\n",
        "    print('Best ARIMA=%s MSE=%.3f' % (best_cfg, best_score))"
      ],
      "metadata": {
        "id": "_r3L_O5m5D5z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import warnings\n",
        "p_values = range(0,11)\n",
        "d_values = range(0, 4)\n",
        "q_values = range(0, 4)\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "evaluate_models(series.values, p_values, d_values, q_values)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5K3-Ztt35GmO",
        "outputId": "62aacb23-adf1-4b07-b1f7-e5115f86dcae"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ARIMA(0, 0, 0) MSE=107.199\n",
            "ARIMA(0, 0, 1) MSE=106.494\n",
            "ARIMA(0, 0, 2) MSE=106.042\n",
            "ARIMA(0, 0, 3) MSE=105.846\n",
            "ARIMA(0, 1, 0) MSE=26.634\n",
            "ARIMA(0, 1, 1) MSE=23.951\n",
            "ARIMA(0, 1, 2) MSE=20.025\n",
            "ARIMA(0, 1, 3) MSE=18.380\n",
            "ARIMA(0, 2, 0) MSE=1059.451\n",
            "ARIMA(0, 2, 1) MSE=942.369\n",
            "ARIMA(0, 2, 2) MSE=998.307\n",
            "ARIMA(0, 2, 3) MSE=6.025\n",
            "ARIMA(0, 3, 0) MSE=1432.028\n",
            "ARIMA(0, 3, 1) MSE=1128.208\n",
            "ARIMA(0, 3, 2) MSE=945.481\n",
            "ARIMA(0, 3, 3) MSE=1022.852\n",
            "ARIMA(1, 0, 0) MSE=62.368\n",
            "ARIMA(1, 0, 1) MSE=72.465\n",
            "ARIMA(1, 0, 2) MSE=81.394\n",
            "ARIMA(1, 0, 3) MSE=91.863\n",
            "ARIMA(1, 1, 0) MSE=8.619\n",
            "ARIMA(1, 1, 1) MSE=13.928\n",
            "ARIMA(1, 1, 2) MSE=14.918\n",
            "ARIMA(1, 1, 3) MSE=18.170\n",
            "ARIMA(1, 2, 0) MSE=1065.125\n",
            "ARIMA(1, 2, 1) MSE=1008.356\n",
            "ARIMA(1, 2, 2) MSE=4.099\n",
            "ARIMA(1, 2, 3) MSE=4.275\n",
            "ARIMA(1, 3, 0) MSE=75819.084\n",
            "ARIMA(1, 3, 1) MSE=1087.634\n",
            "ARIMA(1, 3, 2) MSE=1026.289\n",
            "ARIMA(1, 3, 3) MSE=1016.551\n",
            "ARIMA(2, 0, 0) MSE=97.612\n",
            "ARIMA(2, 0, 1) MSE=95.559\n",
            "ARIMA(2, 0, 2) MSE=94.688\n",
            "ARIMA(2, 0, 3) MSE=36.992\n",
            "ARIMA(2, 1, 0) MSE=23.998\n",
            "ARIMA(2, 1, 1) MSE=22.599\n",
            "ARIMA(2, 1, 2) MSE=22.128\n",
            "ARIMA(2, 1, 3) MSE=23.784\n",
            "ARIMA(2, 2, 0) MSE=862.274\n",
            "ARIMA(2, 2, 1) MSE=7.692\n",
            "ARIMA(2, 2, 2) MSE=529.106\n",
            "ARIMA(2, 2, 3) MSE=9.828\n",
            "ARIMA(2, 3, 0) MSE=97023.559\n",
            "ARIMA(2, 3, 1) MSE=876.089\n",
            "ARIMA(2, 3, 2) MSE=1144.197\n",
            "ARIMA(2, 3, 3) MSE=412.952\n",
            "ARIMA(3, 0, 0) MSE=85.724\n",
            "ARIMA(3, 0, 1) MSE=26.312\n",
            "ARIMA(3, 0, 2) MSE=25.598\n",
            "ARIMA(3, 0, 3) MSE=85.434\n",
            "ARIMA(3, 1, 0) MSE=25.646\n",
            "ARIMA(3, 1, 1) MSE=22.219\n",
            "ARIMA(3, 1, 2) MSE=22.321\n",
            "ARIMA(3, 1, 3) MSE=14.470\n",
            "ARIMA(3, 2, 0) MSE=76.527\n",
            "ARIMA(3, 2, 1) MSE=9.242\n",
            "ARIMA(3, 2, 2) MSE=11.169\n",
            "ARIMA(3, 2, 3) MSE=5.758\n",
            "ARIMA(3, 3, 0) MSE=111379.978\n",
            "ARIMA(3, 3, 1) MSE=56.019\n",
            "ARIMA(3, 3, 2) MSE=39.460\n",
            "ARIMA(3, 3, 3) MSE=416.208\n",
            "ARIMA(4, 0, 0) MSE=66.458\n",
            "ARIMA(4, 0, 1) MSE=25.784\n",
            "ARIMA(4, 0, 2) MSE=25.929\n",
            "ARIMA(4, 0, 3) MSE=84.334\n",
            "ARIMA(4, 1, 0) MSE=25.161\n",
            "ARIMA(4, 1, 1) MSE=25.685\n",
            "ARIMA(4, 1, 2) MSE=22.153\n",
            "ARIMA(4, 1, 3) MSE=22.373\n",
            "ARIMA(4, 2, 0) MSE=5.551\n",
            "ARIMA(4, 2, 1) MSE=5.348\n",
            "ARIMA(4, 2, 2) MSE=8.984\n",
            "ARIMA(4, 2, 3) MSE=12.083\n",
            "ARIMA(4, 3, 0) MSE=51978.345\n",
            "ARIMA(4, 3, 1) MSE=11.365\n",
            "ARIMA(4, 3, 2) MSE=9.773\n",
            "ARIMA(4, 3, 3) MSE=1310.615\n",
            "ARIMA(5, 0, 0) MSE=62.566\n",
            "ARIMA(5, 0, 1) MSE=64.289\n",
            "ARIMA(5, 0, 2) MSE=25.388\n",
            "ARIMA(5, 0, 3) MSE=93.973\n",
            "ARIMA(5, 1, 0) MSE=23.948\n",
            "ARIMA(5, 1, 1) MSE=20.504\n",
            "ARIMA(5, 1, 2) MSE=29.099\n",
            "ARIMA(5, 1, 3) MSE=22.633\n",
            "ARIMA(5, 2, 0) MSE=5.415\n",
            "ARIMA(5, 2, 1) MSE=5.075\n",
            "ARIMA(5, 2, 2) MSE=9.294\n",
            "ARIMA(5, 2, 3) MSE=11.683\n",
            "ARIMA(5, 3, 0) MSE=33532.820\n",
            "ARIMA(5, 3, 1) MSE=10.158\n",
            "ARIMA(5, 3, 2) MSE=7.759\n",
            "ARIMA(5, 3, 3) MSE=37.292\n",
            "ARIMA(6, 0, 0) MSE=55.322\n",
            "ARIMA(6, 0, 1) MSE=64.561\n",
            "ARIMA(6, 0, 2) MSE=35.444\n",
            "ARIMA(6, 0, 3) MSE=79.829\n",
            "ARIMA(6, 1, 0) MSE=21.617\n",
            "ARIMA(6, 1, 1) MSE=19.065\n",
            "ARIMA(6, 1, 2) MSE=17.217\n",
            "ARIMA(6, 1, 3) MSE=16.300\n",
            "ARIMA(6, 2, 0) MSE=8.048\n",
            "ARIMA(6, 2, 1) MSE=6.228\n",
            "ARIMA(6, 2, 3) MSE=8.984\n",
            "ARIMA(6, 3, 0) MSE=33787.964\n",
            "ARIMA(6, 3, 1) MSE=14.464\n",
            "ARIMA(6, 3, 2) MSE=10.749\n",
            "ARIMA(6, 3, 3) MSE=48.294\n",
            "ARIMA(7, 0, 0) MSE=35.043\n",
            "ARIMA(7, 0, 1) MSE=20.733\n",
            "ARIMA(7, 0, 2) MSE=22.743\n",
            "ARIMA(7, 0, 3) MSE=69.552\n",
            "ARIMA(7, 1, 0) MSE=18.553\n",
            "ARIMA(7, 1, 1) MSE=18.039\n",
            "ARIMA(7, 1, 2) MSE=16.866\n",
            "ARIMA(7, 1, 3) MSE=16.732\n",
            "ARIMA(7, 2, 0) MSE=20.722\n",
            "ARIMA(7, 2, 1) MSE=3.042\n",
            "ARIMA(7, 2, 2) MSE=2.784\n",
            "ARIMA(7, 2, 3) MSE=2.155\n",
            "ARIMA(7, 3, 0) MSE=60526.783\n",
            "ARIMA(7, 3, 1) MSE=31.213\n",
            "ARIMA(7, 3, 2) MSE=10.843\n",
            "ARIMA(7, 3, 3) MSE=24.659\n",
            "ARIMA(8, 0, 0) MSE=21.975\n",
            "ARIMA(8, 0, 1) MSE=19.954\n",
            "ARIMA(8, 0, 2) MSE=19.025\n",
            "ARIMA(8, 0, 3) MSE=69.672\n",
            "ARIMA(8, 1, 0) MSE=17.505\n",
            "ARIMA(8, 1, 1) MSE=17.547\n",
            "ARIMA(8, 1, 2) MSE=17.582\n",
            "ARIMA(8, 1, 3) MSE=16.979\n",
            "ARIMA(8, 2, 0) MSE=3.644\n",
            "ARIMA(8, 2, 1) MSE=1.905\n",
            "ARIMA(8, 2, 2) MSE=3.069\n",
            "ARIMA(8, 2, 3) MSE=5.730\n",
            "ARIMA(8, 3, 0) MSE=11159.288\n",
            "ARIMA(8, 3, 1) MSE=3.535\n",
            "ARIMA(8, 3, 2) MSE=9.819\n",
            "ARIMA(8, 3, 3) MSE=40.771\n",
            "ARIMA(9, 0, 0) MSE=18.591\n",
            "ARIMA(9, 0, 1) MSE=18.671\n",
            "ARIMA(9, 0, 2) MSE=18.502\n",
            "ARIMA(9, 0, 3) MSE=17.975\n",
            "ARIMA(9, 1, 0) MSE=17.542\n",
            "ARIMA(9, 1, 1) MSE=17.547\n",
            "ARIMA(9, 1, 2) MSE=17.586\n",
            "ARIMA(9, 1, 3) MSE=17.144\n",
            "ARIMA(9, 2, 0) MSE=1.150\n",
            "ARIMA(9, 2, 1) MSE=1.833\n",
            "ARIMA(9, 2, 2) MSE=1.878\n",
            "ARIMA(9, 2, 3) MSE=6.436\n",
            "ARIMA(9, 3, 0) MSE=5080.474\n",
            "ARIMA(9, 3, 1) MSE=1.468\n",
            "ARIMA(9, 3, 2) MSE=36.215\n",
            "ARIMA(9, 3, 3) MSE=7.989\n",
            "ARIMA(10, 0, 0) MSE=18.554\n",
            "ARIMA(10, 0, 1) MSE=18.698\n",
            "ARIMA(10, 0, 2) MSE=18.717\n",
            "ARIMA(10, 0, 3) MSE=17.485\n",
            "ARIMA(10, 1, 0) MSE=17.642\n",
            "ARIMA(10, 1, 1) MSE=17.734\n",
            "ARIMA(10, 1, 2) MSE=17.729\n",
            "ARIMA(10, 1, 3) MSE=17.150\n",
            "ARIMA(10, 2, 0) MSE=1.906\n",
            "ARIMA(10, 2, 1) MSE=3.473\n",
            "ARIMA(10, 2, 2) MSE=3.965\n",
            "ARIMA(10, 2, 3) MSE=3.705\n",
            "ARIMA(10, 3, 0) MSE=1464.266\n",
            "ARIMA(10, 3, 1) MSE=1.740\n",
            "ARIMA(10, 3, 2) MSE=15.112\n",
            "ARIMA(10, 3, 3) MSE=6.700\n",
            "Best ARIMA=(9, 2, 0) MSE=1.150\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "This code tries different combinations of parameters for an ARIMA model to find the best one for predicting CO2 levels. It prints out the combinations tested along with their Mean Squared Error (MSE), helping to identify the best-performing model, which in this case is ARIMA(9, 2, 0) with an MSE of 1.150."
      ],
      "metadata": {
        "id": "ryfKbjmpOTNH"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Supplementary Activity:  do the same for this dataset - dataset_temperature.csv"
      ],
      "metadata": {
        "id": "9afeTT_fkIo9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Load time series"
      ],
      "metadata": {
        "id": "VXyc_b159e2c"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Load time series data\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from statsmodels.tsa.arima.model import ARIMA\n",
        "from sklearn.metrics import mean_squared_error\n",
        "from math import sqrt\n",
        "\n",
        "# Load dataset\n",
        "names = ['Month','Temperature']\n",
        "series_temperature = pd.read_csv('/content/drive/MyDrive/EMTECH2/ARIMA/dataset_temperature.csv',names=names, index_col='Month', parse_dates=True)"
      ],
      "metadata": {
        "id": "ZHVmp14v7aV_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Exclude the last two rows from the dataset\n",
        "series_temperature = series_temperature.iloc[1:-2]"
      ],
      "metadata": {
        "id": "6bAKEw-h-I8-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Convert the 'Temperature' column to float\n",
        "series_temperature['Temperature'] = series_temperature['Temperature'].astype(float)\n"
      ],
      "metadata": {
        "id": "L-IbtG1mt0qv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "series_temperature.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "4M1Jw5M9uPV1",
        "outputId": "a123e50d-d6e0-44bd-9680-ba9ba80401f8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Temperature\n",
              "count   792.000000\n",
              "mean     53.553662\n",
              "std      15.815452\n",
              "min      11.200000\n",
              "25%      39.675000\n",
              "50%      52.150000\n",
              "75%      67.200000\n",
              "max      82.400000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3f3feadd-b278-4775-94ce-b7de5d968530\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Temperature</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>792.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>53.553662</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>15.815452</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>11.200000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>39.675000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>52.150000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>67.200000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>82.400000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f3feadd-b278-4775-94ce-b7de5d968530')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3f3feadd-b278-4775-94ce-b7de5d968530 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3f3feadd-b278-4775-94ce-b7de5d968530');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dd42a508-41b1-4292-afc6-a0c24136aed7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd42a508-41b1-4292-afc6-a0c24136aed7')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dd42a508-41b1-4292-afc6-a0c24136aed7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"series_temperature\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 264.8406612033583,\n        \"min\": 11.2,\n        \"max\": 792.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          53.55366161616162,\n          52.150000000000006,\n          792.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "series_temperature.head(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 708
        },
        "id": "2rW6zBEi7Tcu",
        "outputId": "8e12315a-ce40-42ed-f4bf-c81e85e13013"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Temperature\n",
              "Month               \n",
              "1907-01         33.3\n",
              "1907-02         46.0\n",
              "1907-03         43.0\n",
              "1907-04         55.0\n",
              "1907-05         51.8\n",
              "1907-06         57.5\n",
              "1907-07         74.8\n",
              "1907-08         75.6\n",
              "1907-09         66.3\n",
              "1907-10         46.2\n",
              "1907-11         37.8\n",
              "1907-12         37.6\n",
              "1908-01         35.6\n",
              "1908-02         35.2\n",
              "1908-03         48.1\n",
              "1908-04         50.0\n",
              "1908-05         46.8\n",
              "1908-06         64.6\n",
              "1908-07         81.0\n",
              "1908-08         74.9"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e65fc8a8-5eef-4a19-9ae0-6a666337a3d8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Temperature</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Month</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1907-01</th>\n",
              "      <td>33.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-02</th>\n",
              "      <td>46.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-03</th>\n",
              "      <td>43.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-04</th>\n",
              "      <td>55.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-05</th>\n",
              "      <td>51.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-06</th>\n",
              "      <td>57.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-07</th>\n",
              "      <td>74.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-08</th>\n",
              "      <td>75.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-09</th>\n",
              "      <td>66.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-10</th>\n",
              "      <td>46.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-11</th>\n",
              "      <td>37.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1907-12</th>\n",
              "      <td>37.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1908-01</th>\n",
              "      <td>35.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1908-02</th>\n",
              "      <td>35.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1908-03</th>\n",
              "      <td>48.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1908-04</th>\n",
              "      <td>50.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1908-05</th>\n",
              "      <td>46.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1908-06</th>\n",
              "      <td>64.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1908-07</th>\n",
              "      <td>81.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1908-08</th>\n",
              "      <td>74.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e65fc8a8-5eef-4a19-9ae0-6a666337a3d8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e65fc8a8-5eef-4a19-9ae0-6a666337a3d8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e65fc8a8-5eef-4a19-9ae0-6a666337a3d8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9b04a233-84fb-48b1-9e6e-eaddbb4e74b0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b04a233-84fb-48b1-9e6e-eaddbb4e74b0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9b04a233-84fb-48b1-9e6e-eaddbb4e74b0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "series_temperature",
              "summary": "{\n  \"name\": \"series_temperature\",\n  \"rows\": 792,\n  \"fields\": [\n    {\n      \"column\": \"Month\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 792,\n        \"samples\": [\n          \"1964-11\",\n          \"1951-01\",\n          \"1956-11\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Temperature\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.815451540670232,\n        \"min\": 11.2,\n        \"max\": 82.4,\n        \"num_unique_values\": 407,\n        \"samples\": [\n          41.9,\n          25.6,\n          45.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Visualize the time series"
      ],
      "metadata": {
        "id": "fKZlDP129dJ9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "series_temperature.columns"
      ],
      "metadata": {
        "id": "xzowLnKJnOIW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "39e49c94-8e3b-4367-a386-a1f2e2ac0de5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['Temperature'], dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualize the time series\n",
        "series_temperature.plot()\n",
        "plt.title('Temperature Time Series')\n",
        "plt.xlabel('Month')\n",
        "plt.ylabel('Temperature')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "h8vszBmJ9dJ9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "outputId": "196dd070-012a-4f8c-bbef-258728abde71"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "The plot shows the temperature fluctuations over time, ranging between 10 to 80 degrees, with variations occurring month by month. Despite these fluctuations, the overall trend appears to be tightly clustered around the middle range of the temperature scale."
      ],
      "metadata": {
        "id": "ukDhApq_O0dA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Fit an ARIMA Model (baseline model order = (1,1,1))\n"
      ],
      "metadata": {
        "id": "2-eu7puI9yN0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Fit a baseline ARIMA model with order (1,1,1)\n",
        "model_baseline_temperature = ARIMA(series_temperature, order=(1,1,1))\n",
        "model_fit_baseline_temperature = model_baseline_temperature.fit()\n"
      ],
      "metadata": {
        "id": "pgUCEIdi9yN1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Improve the ARIMA Model\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "0jVvKs0I9yN1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Improve ARIMA Model\n",
        "model_improved_temperature = ARIMA(series_temperature, order=(1,2,3))\n",
        "model_fit_improved_temperature = model_improved_temperature.fit()"
      ],
      "metadata": {
        "id": "5tJ1gRdW9yN1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Print the model summary\n"
      ],
      "metadata": {
        "id": "_X2IZ9EG9yN1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Print model summary\n",
        "print(\"Baseline Model Summary:\")\n",
        "print(model_fit_baseline_temperature.summary())\n",
        "print(\"\\nImproved Model Summary:\")\n",
        "print(model_fit_improved_temperature.summary())"
      ],
      "metadata": {
        "id": "Y6Id0CVE9yN1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7e986964-2261-4a06-d83a-a1ce57db5b6d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Baseline Model Summary:\n",
            "                               SARIMAX Results                                \n",
            "==============================================================================\n",
            "Dep. Variable:            Temperature   No. Observations:                  792\n",
            "Model:                 ARIMA(1, 1, 1)   Log Likelihood               -2773.596\n",
            "Date:                Sat, 04 May 2024   AIC                           5553.192\n",
            "Time:                        10:27:31   BIC                           5567.212\n",
            "Sample:                    01-01-1907   HQIC                          5558.581\n",
            "                         - 12-01-1972                                         \n",
            "Covariance Type:                  opg                                         \n",
            "==============================================================================\n",
            "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------\n",
            "ar.L1          0.5458      0.060      9.104      0.000       0.428       0.663\n",
            "ma.L1         -0.0333      0.072     -0.462      0.644      -0.174       0.108\n",
            "sigma2        65.0156      3.525     18.445      0.000      58.107      71.924\n",
            "===================================================================================\n",
            "Ljung-Box (L1) (Q):                   0.03   Jarque-Bera (JB):                 7.69\n",
            "Prob(Q):                              0.86   Prob(JB):                         0.02\n",
            "Heteroskedasticity (H):               0.93   Skew:                             0.23\n",
            "Prob(H) (two-sided):                  0.56   Kurtosis:                         2.88\n",
            "===================================================================================\n",
            "\n",
            "Warnings:\n",
            "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n",
            "\n",
            "Improved Model Summary:\n",
            "                               SARIMAX Results                                \n",
            "==============================================================================\n",
            "Dep. Variable:            Temperature   No. Observations:                  792\n",
            "Model:                 ARIMA(1, 2, 3)   Log Likelihood               -2754.869\n",
            "Date:                Sat, 04 May 2024   AIC                           5519.738\n",
            "Time:                        10:27:31   BIC                           5543.098\n",
            "Sample:                    01-01-1907   HQIC                          5528.717\n",
            "                         - 12-01-1972                                         \n",
            "Covariance Type:                  opg                                         \n",
            "==============================================================================\n",
            "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------\n",
            "ar.L1          0.4445      0.087      5.080      0.000       0.273       0.616\n",
            "ma.L1         -0.9817      4.320     -0.227      0.820      -9.448       7.485\n",
            "ma.L2          0.2319      0.084      2.755      0.006       0.067       0.397\n",
            "ma.L3         -0.2502      1.070     -0.234      0.815      -2.348       1.847\n",
            "sigma2        62.1496    266.851      0.233      0.816    -460.869     585.168\n",
            "===================================================================================\n",
            "Ljung-Box (L1) (Q):                   0.61   Jarque-Bera (JB):                 7.14\n",
            "Prob(Q):                              0.44   Prob(JB):                         0.03\n",
            "Heteroskedasticity (H):               0.88   Skew:                             0.23\n",
            "Prob(H) (two-sided):                  0.31   Kurtosis:                         2.89\n",
            "===================================================================================\n",
            "\n",
            "Warnings:\n",
            "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "The first model tried to understand temperature changes using some math, but it didn't quite work well because some numbers didn't help much. The second try added more math, but it still didn't do much better because those new numbers didn't really make a difference."
      ],
      "metadata": {
        "id": "fmA5NDfsPJYe"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Make a forecast (steps=10)\n"
      ],
      "metadata": {
        "id": "EZBkHfk49yN2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Make forecast steps\n",
        "train_size_temperature = int(len(series_temperature) * 0.75)\n",
        "train_data_temperature, test_data_temperature = series_temperature[0:train_size_temperature], series_temperature[train_size_temperature:]\n",
        "\n",
        "start_temperature = len(train_data_temperature)\n",
        "end_temperature = len(train_data_temperature) + len(test_data_temperature) - 1\n",
        "model_forecast_temperature = ARIMA(train_data_temperature, order=(9,2,0))\n",
        "results_forecast_temperature = model_forecast_temperature.fit()\n",
        "predictions_temperature = results_forecast_temperature.predict(start=start_temperature, end=end_temperature, dynamic=False, type='levels')\n",
        "forecast_temperature = results_forecast_temperature.predict(len(series_temperature), len(series_temperature) + 10, typ='levels')\n"
      ],
      "metadata": {
        "id": "dQb4UDAW9yN2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\nForecast (steps = 10):\")\n",
        "print(forecast_temperature)"
      ],
      "metadata": {
        "id": "Rb76m8QR9yN2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ca51abd2-fe4c-4406-92ac-cad7acfc7bfa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Forecast (steps = 10):\n",
            "1973-01-01    113.284581\n",
            "1973-02-01    113.551532\n",
            "1973-03-01    113.772269\n",
            "1973-04-01    113.970151\n",
            "1973-05-01    114.173882\n",
            "1973-06-01    114.409288\n",
            "1973-07-01    114.692256\n",
            "1973-08-01    115.024743\n",
            "1973-09-01    115.394839\n",
            "1973-10-01    115.780688\n",
            "1973-11-01    116.156999\n",
            "Freq: MS, Name: predicted_mean, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\nMSE: \", mean_squared_error(test_data_temperature, predictions_temperature))\n",
        "print(\"RMSE: \", sqrt(mean_squared_error(test_data_temperature, predictions_temperature)))"
      ],
      "metadata": {
        "id": "4nHQHDau9yN2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ff172518-a8b0-436f-ef5a-126c77b3f047"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "MSE:  1360.2977048399682\n",
            "RMSE:  36.88221393625887\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Plot the forecast\n"
      ],
      "metadata": {
        "id": "8sZ0ECax9yN2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.ticker as ticker\n",
        "formatter_temperature = ticker.StrMethodFormatter('{x:,.0f}')"
      ],
      "metadata": {
        "id": "ah4C0aue9yN2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "ylabel='Temperature'\n",
        "xlabel='Year'\n",
        "\n",
        "# Plot the forecast\n",
        "ax_temperature = series_temperature.plot(legend=True, figsize=(12,6))\n",
        "forecast_temperature.plot(legend=True)\n",
        "ax_temperature.autoscale(axis='x', tight=True)\n",
        "ax_temperature.set(xlabel='Month', ylabel='Temperature')"
      ],
      "metadata": {
        "id": "MGqu7_LX9yN2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 446
        },
        "outputId": "9d05e0b9-ab5e-4fac-dfb0-38be37df7bbf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0.5, 0, 'Month'), Text(0, 0.5, 'Temperature')]"
            ]
          },
          "metadata": {},
          "execution_count": 33
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "The plot displays temperature fluctuations over time, ranging between 10 to 80 degrees, with a relatively stable pattern. However, the forecast predicts temperature values that significantly deviate from this pattern, indicating potential outliers in the prediction."
      ],
      "metadata": {
        "id": "jp40A_2HPoQX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Perform a grid search\n"
      ],
      "metadata": {
        "id": "UP2UO6Dq9yN3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def evaluate_arima_model_temperature(dataset_temperature, arima_order_temperature):\n",
        "    train_size_temperature = int(len(dataset_temperature) * 0.75)\n",
        "    train_data_temperature, test_data_temperature = dataset_temperature[0:train_size_temperature], dataset_temperature[train_size_temperature:]\n",
        "\n",
        "    start_temperature = len(train_data_temperature)\n",
        "    end_temperature = len(train_data_temperature) + len(test_data_temperature) - 1\n",
        "\n",
        "    model_temperature = ARIMA(train_data_temperature, order=arima_order_temperature)\n",
        "    results_temperature = model_temperature.fit()\n",
        "    forecast_temperature = results_temperature.predict(len(dataset_temperature), len(dataset_temperature) + 10, typ='levels')\n",
        "    predictions_temperature = results_temperature.predict(start=start_temperature, end=end_temperature, dynamic=False, type='levels')\n",
        "    mse_temperature = mean_squared_error(test_data_temperature, predictions_temperature)\n",
        "    return mse_temperature"
      ],
      "metadata": {
        "id": "hYz1b6uQ9yN3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def evaluate_models_temperature(dataset_temperature, p_values_temperature, d_values_temperature, q_values_temperature):\n",
        "    best_score_temperature, best_cfg_temperature = float(\"inf\"), None\n",
        "    for p_temperature in p_values_temperature:\n",
        "        for d_temperature in d_values_temperature:\n",
        "            for q_temperature in q_values_temperature:\n",
        "                order_temperature = (p_temperature, d_temperature, q_temperature)\n",
        "                try:\n",
        "                    mse_temperature = evaluate_arima_model_temperature(dataset_temperature, order_temperature)\n",
        "                    if mse_temperature < best_score_temperature:\n",
        "                        best_score_temperature, best_cfg_temperature = mse_temperature, order_temperature\n",
        "                    print('ARIMA%s MSE=%.3f' % (order_temperature, mse_temperature))\n",
        "                except:\n",
        "                    continue\n",
        "    print('Best ARIMA=%s MSE=%.3f' % (best_cfg_temperature, best_score_temperature))"
      ],
      "metadata": {
        "id": "VI_BAtTH9yN3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import warnings\n",
        "p_values_temperature = range(0, 11)\n",
        "d_values_temperature = range(0, 4)\n",
        "q_values_temperature = range(0, 4)\n",
        "print(\"\\nPerforming Grid Search:\")\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "evaluate_models_temperature(series_temperature.values, p_values_temperature, d_values_temperature, q_values_temperature)"
      ],
      "metadata": {
        "id": "7S8SyaIh9yN3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c7f56534-84cf-4f18-894c-211048d08afc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Performing Grid Search:\n",
            "ARIMA(0, 0, 0) MSE=244.680\n",
            "ARIMA(0, 0, 1) MSE=243.522\n",
            "ARIMA(0, 0, 2) MSE=241.414\n",
            "ARIMA(0, 0, 3) MSE=240.950\n",
            "ARIMA(0, 1, 0) MSE=495.038\n",
            "ARIMA(0, 1, 1) MSE=563.035\n",
            "ARIMA(0, 1, 2) MSE=762.177\n",
            "ARIMA(0, 1, 3) MSE=241.417\n",
            "ARIMA(0, 2, 0) MSE=1244065.976\n",
            "ARIMA(0, 2, 1) MSE=1228064.280\n",
            "ARIMA(0, 2, 2) MSE=1375959.214\n",
            "ARIMA(0, 2, 3) MSE=1226.256\n",
            "ARIMA(0, 3, 0) MSE=75530369.710\n",
            "ARIMA(0, 3, 1) MSE=1146838.733\n",
            "ARIMA(0, 3, 2) MSE=1228565.660\n",
            "ARIMA(0, 3, 3) MSE=1377435.736\n",
            "ARIMA(1, 0, 0) MSE=244.502\n",
            "ARIMA(1, 0, 1) MSE=242.878\n",
            "ARIMA(1, 0, 2) MSE=242.032\n",
            "ARIMA(1, 0, 3) MSE=241.498\n",
            "ARIMA(1, 1, 0) MSE=927.784\n",
            "ARIMA(1, 1, 1) MSE=967.960\n",
            "ARIMA(1, 1, 2) MSE=242.927\n",
            "ARIMA(1, 1, 3) MSE=242.089\n",
            "ARIMA(1, 2, 0) MSE=1304343.983\n",
            "ARIMA(1, 2, 1) MSE=1337791.293\n",
            "ARIMA(1, 2, 2) MSE=1669.403\n",
            "ARIMA(1, 2, 3) MSE=1745.212\n",
            "ARIMA(1, 3, 0) MSE=348687748.241\n",
            "ARIMA(1, 3, 1) MSE=1318901.869\n",
            "ARIMA(1, 3, 2) MSE=1359081.389\n",
            "ARIMA(1, 3, 3) MSE=1237604.102\n",
            "ARIMA(2, 0, 0) MSE=235.314\n",
            "ARIMA(2, 0, 1) MSE=184.648\n",
            "ARIMA(2, 0, 2) MSE=16.308\n",
            "ARIMA(2, 0, 3) MSE=15.935\n",
            "ARIMA(2, 1, 0) MSE=1011.380\n",
            "ARIMA(2, 1, 1) MSE=1098.996\n",
            "ARIMA(2, 1, 2) MSE=81.734\n",
            "ARIMA(2, 1, 3) MSE=15.882\n",
            "ARIMA(2, 2, 0) MSE=1348894.744\n",
            "ARIMA(2, 2, 1) MSE=1749.263\n",
            "ARIMA(2, 2, 2) MSE=1391296.204\n",
            "ARIMA(2, 2, 3) MSE=250.635\n",
            "ARIMA(2, 3, 0) MSE=56853045.137\n",
            "ARIMA(2, 3, 1) MSE=1371095.347\n",
            "ARIMA(2, 3, 2) MSE=1341986.211\n",
            "ARIMA(2, 3, 3) MSE=1409162.832\n",
            "ARIMA(3, 0, 0) MSE=221.547\n",
            "ARIMA(3, 0, 1) MSE=151.679\n",
            "ARIMA(3, 0, 2) MSE=16.484\n",
            "ARIMA(3, 0, 3) MSE=15.662\n",
            "ARIMA(3, 1, 0) MSE=601.768\n",
            "ARIMA(3, 1, 1) MSE=221.441\n",
            "ARIMA(3, 1, 2) MSE=151.890\n",
            "ARIMA(3, 1, 3) MSE=52.578\n",
            "ARIMA(3, 2, 0) MSE=1342468.850\n",
            "ARIMA(3, 2, 1) MSE=1309311.193\n",
            "ARIMA(3, 2, 2) MSE=1621849.775\n",
            "ARIMA(3, 2, 3) MSE=244.203\n",
            "ARIMA(3, 3, 0) MSE=197910450.214\n",
            "ARIMA(3, 3, 1) MSE=1351226.932\n",
            "ARIMA(3, 3, 2) MSE=1418908.379\n",
            "ARIMA(3, 3, 3) MSE=1358140.893\n",
            "ARIMA(4, 0, 0) MSE=201.603\n",
            "ARIMA(4, 0, 1) MSE=127.117\n",
            "ARIMA(4, 0, 2) MSE=16.863\n",
            "ARIMA(4, 0, 3) MSE=16.364\n",
            "ARIMA(4, 1, 0) MSE=293.244\n",
            "ARIMA(4, 1, 1) MSE=201.386\n",
            "ARIMA(4, 1, 2) MSE=133.521\n",
            "ARIMA(4, 1, 3) MSE=149.130\n",
            "ARIMA(4, 2, 0) MSE=1083943.382\n",
            "ARIMA(4, 2, 1) MSE=389.847\n",
            "ARIMA(4, 2, 2) MSE=203.521\n",
            "ARIMA(4, 2, 3) MSE=221.753\n",
            "ARIMA(4, 3, 0) MSE=210207749.390\n",
            "ARIMA(4, 3, 1) MSE=1079077.742\n",
            "ARIMA(4, 3, 2) MSE=1407389.734\n",
            "ARIMA(4, 3, 3) MSE=1347693.486\n",
            "ARIMA(5, 0, 0) MSE=159.476\n",
            "ARIMA(5, 0, 1) MSE=106.672\n",
            "ARIMA(5, 0, 2) MSE=31.796\n",
            "ARIMA(5, 0, 3) MSE=15.886\n",
            "ARIMA(5, 1, 0) MSE=244.940\n",
            "ARIMA(5, 1, 1) MSE=159.391\n",
            "ARIMA(5, 1, 2) MSE=201.623\n",
            "ARIMA(5, 1, 3) MSE=127.377\n",
            "ARIMA(5, 2, 0) MSE=746612.917\n",
            "ARIMA(5, 2, 1) MSE=284.114\n",
            "ARIMA(5, 2, 2) MSE=161.399\n",
            "ARIMA(5, 2, 3) MSE=200.487\n",
            "ARIMA(5, 3, 0) MSE=234395434.710\n",
            "ARIMA(5, 3, 1) MSE=678738.256\n",
            "ARIMA(5, 3, 2) MSE=1148142.450\n",
            "ARIMA(5, 3, 3) MSE=1343277.790\n",
            "ARIMA(6, 0, 0) MSE=117.310\n",
            "ARIMA(6, 0, 1) MSE=96.043\n",
            "ARIMA(6, 0, 2) MSE=37.192\n",
            "ARIMA(6, 0, 3) MSE=15.915\n",
            "ARIMA(6, 1, 0) MSE=215.862\n",
            "ARIMA(6, 1, 1) MSE=116.873\n",
            "ARIMA(6, 1, 2) MSE=156.753\n",
            "ARIMA(6, 1, 3) MSE=98.663\n",
            "ARIMA(6, 2, 0) MSE=427838.087\n",
            "ARIMA(6, 2, 1) MSE=221.715\n",
            "ARIMA(6, 2, 2) MSE=348.786\n",
            "ARIMA(6, 2, 3) MSE=156.758\n",
            "ARIMA(6, 3, 0) MSE=399055834.502\n",
            "ARIMA(6, 3, 1) MSE=368520.757\n",
            "ARIMA(6, 3, 2) MSE=2846.516\n",
            "ARIMA(6, 3, 3) MSE=629.715\n",
            "ARIMA(7, 0, 0) MSE=90.320\n",
            "ARIMA(7, 0, 1) MSE=88.018\n",
            "ARIMA(7, 0, 2) MSE=59.669\n",
            "ARIMA(7, 0, 3) MSE=17.650\n",
            "ARIMA(7, 1, 0) MSE=193.648\n",
            "ARIMA(7, 1, 1) MSE=89.218\n",
            "ARIMA(7, 1, 2) MSE=135.621\n",
            "ARIMA(7, 1, 3) MSE=157.204\n",
            "ARIMA(7, 2, 0) MSE=151167.892\n",
            "ARIMA(7, 2, 1) MSE=193.040\n",
            "ARIMA(7, 2, 2) MSE=87.440\n",
            "ARIMA(7, 2, 3) MSE=276.370\n",
            "ARIMA(7, 3, 0) MSE=450580918.836\n",
            "ARIMA(7, 3, 1) MSE=120431.737\n",
            "ARIMA(7, 3, 2) MSE=2232.724\n",
            "ARIMA(7, 3, 3) MSE=216.992\n",
            "ARIMA(8, 0, 0) MSE=84.387\n",
            "ARIMA(8, 0, 1) MSE=84.161\n",
            "ARIMA(8, 0, 2) MSE=20.044\n",
            "ARIMA(8, 0, 3) MSE=44.994\n",
            "ARIMA(8, 1, 0) MSE=134.222\n",
            "ARIMA(8, 1, 1) MSE=54.949\n",
            "ARIMA(8, 1, 2) MSE=36.347\n",
            "ARIMA(8, 1, 3) MSE=107.471\n",
            "ARIMA(8, 2, 0) MSE=32591.396\n",
            "ARIMA(8, 2, 1) MSE=131.714\n",
            "ARIMA(8, 2, 2) MSE=108.929\n",
            "ARIMA(8, 2, 3) MSE=62.546\n",
            "ARIMA(8, 3, 0) MSE=412606541.021\n",
            "ARIMA(8, 3, 1) MSE=27051.507\n",
            "ARIMA(8, 3, 2) MSE=32350.952\n",
            "ARIMA(8, 3, 3) MSE=190.871\n",
            "ARIMA(9, 0, 0) MSE=83.737\n",
            "ARIMA(9, 0, 1) MSE=84.914\n",
            "ARIMA(9, 0, 2) MSE=46.065\n",
            "ARIMA(9, 0, 3) MSE=28.914\n",
            "ARIMA(9, 1, 0) MSE=70.143\n",
            "ARIMA(9, 1, 1) MSE=36.156\n",
            "ARIMA(9, 1, 2) MSE=39.450\n",
            "ARIMA(9, 1, 3) MSE=27.236\n",
            "ARIMA(9, 2, 0) MSE=1360.298\n",
            "ARIMA(9, 2, 1) MSE=71.076\n",
            "ARIMA(9, 2, 2) MSE=283.175\n",
            "ARIMA(9, 2, 3) MSE=57.648\n",
            "ARIMA(9, 3, 0) MSE=206089706.853\n",
            "ARIMA(9, 3, 1) MSE=814.268\n",
            "ARIMA(9, 3, 2) MSE=15779.173\n",
            "ARIMA(9, 3, 3) MSE=119.888\n",
            "ARIMA(10, 0, 0) MSE=65.828\n",
            "ARIMA(10, 0, 1) MSE=38.401\n",
            "ARIMA(10, 0, 2) MSE=23.298\n",
            "ARIMA(10, 0, 3) MSE=16.895\n",
            "ARIMA(10, 1, 0) MSE=31.963\n",
            "ARIMA(10, 1, 1) MSE=28.851\n",
            "ARIMA(10, 1, 2) MSE=29.162\n",
            "ARIMA(10, 1, 3) MSE=67.190\n",
            "ARIMA(10, 2, 0) MSE=136.392\n",
            "ARIMA(10, 2, 1) MSE=25.259\n",
            "ARIMA(10, 2, 2) MSE=43.437\n",
            "ARIMA(10, 2, 3) MSE=30.209\n",
            "ARIMA(10, 3, 0) MSE=58930759.235\n",
            "ARIMA(10, 3, 1) MSE=937.274\n",
            "ARIMA(10, 3, 2) MSE=23886.080\n",
            "ARIMA(10, 3, 3) MSE=582.884\n",
            "Best ARIMA=(3, 0, 3) MSE=15.662\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Analysis:\n",
        "\n",
        "By systematically trying different combinations of ARIMA parameters, the grid search method identified the best model as ARIMA(3, 0, 3) with a mean squared error (MSE) of 15.662, suggesting that this model provides the most accurate forecast for the temperature time series data. The MSE indicates how close the model's predictions are to the actual values, with lower values indicating better performance, making ARIMA(3, 0, 3) the optimal choice among the tested configurations."
      ],
      "metadata": {
        "id": "cQvQh4GzP6RP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Conclusion:\n",
        "\n",
        "Using ARIMA models for prediction has been a valuable experience. Through experimenting with different parameters and evaluating model performance, I've gained insights into how these models can effectively capture and forecast time series data patterns. ARIMA provides a structured framework for analyzing and predicting trends, making it a powerful tool in various fields such as finance, economics, and climate science. However, it's important to note that ARIMA is just one approach, and its effectiveness depends on factors like data quality, model assumptions, and the presence of external factors. Overall, ARIMA offers a versatile and reliable method for time series forecasting, but it's crucial to combine it with domain knowledge and other techniques for robust predictions in real-world scenarios."
      ],
      "metadata": {
        "id": "NtBiN-DSP88T"
      }
    }
  ]
}
